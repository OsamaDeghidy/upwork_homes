# Generated by Django 4.2.7 on 2025-07-15 15:16

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='اسم الدولة', max_length=100, unique=True)),
                ('code', models.CharField(help_text='رمز الدولة (ISO)', max_length=3, unique=True)),
                ('currency', models.CharField(help_text='رمز العملة', max_length=3)),
                ('is_active', models.BooleanField(default=True, help_text='هل الدولة نشطة في النظام')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countries',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='LocationHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('latitude', models.DecimalField(decimal_places=8, help_text='خط العرض', max_digits=10, validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)])),
                ('longitude', models.DecimalField(decimal_places=8, help_text='خط الطول', max_digits=11, validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)])),
                ('action_type', models.CharField(choices=[('login', 'تسجيل دخول'), ('location_update', 'تحديث موقع'), ('service_request', 'طلب خدمة'), ('project_visit', 'زيارة مشروع')], help_text='نوع النشاط', max_length=20)),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='عنوان IP', null=True)),
                ('user_agent', models.TextField(blank=True, help_text='معلومات المتصفح')),
                ('accuracy', models.FloatField(blank=True, help_text='دقة الموقع بالمتر', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(help_text='المستخدم', on_delete=django.db.models.deletion.CASCADE, related_name='location_history', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Location History',
                'verbose_name_plural': 'Location History',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='اسم المدينة', max_length=100)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, help_text='خط العرض', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)])),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, help_text='خط الطول', max_digits=11, null=True, validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)])),
                ('timezone', models.CharField(blank=True, help_text='المنطقة الزمنية', max_length=50)),
                ('is_active', models.BooleanField(default=True, help_text='هل المدينة نشطة في النظام')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('country', models.ForeignKey(help_text='الدولة التابعة لها المدينة', on_delete=django.db.models.deletion.CASCADE, related_name='cities', to='location_services.country')),
            ],
            options={
                'verbose_name': 'City',
                'verbose_name_plural': 'Cities',
                'ordering': ['name'],
                'unique_together': {('name', 'country')},
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('street_address', models.CharField(help_text='العنوان - الشارع', max_length=255)),
                ('apartment_number', models.CharField(blank=True, help_text='رقم الشقة/المبنى', max_length=50)),
                ('neighborhood', models.CharField(blank=True, help_text='الحي', max_length=100)),
                ('postal_code', models.CharField(blank=True, help_text='الرمز البريدي', max_length=20)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, help_text='خط العرض', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)])),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, help_text='خط الطول', max_digits=11, null=True, validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)])),
                ('landmark', models.CharField(blank=True, help_text='معلم مميز قريب', max_length=255)),
                ('notes', models.TextField(blank=True, help_text='ملاحظات إضافية عن الموقع')),
                ('is_verified', models.BooleanField(default=False, help_text='هل تم التحقق من العنوان')),
                ('verified_at', models.DateTimeField(blank=True, help_text='تاريخ التحقق', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('city', models.ForeignKey(help_text='المدينة', on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='location_services.city')),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Addresses',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserLocation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('location_type', models.CharField(choices=[('primary', 'العنوان الرئيسي'), ('secondary', 'عنوان ثانوي'), ('work', 'عنوان العمل'), ('service', 'منطقة خدمة')], default='primary', help_text='نوع الموقع', max_length=20)),
                ('label', models.CharField(blank=True, help_text='تسمية مخصصة للموقع', max_length=100)),
                ('privacy_level', models.CharField(choices=[('public', 'عام'), ('professional', 'للمحترفين فقط'), ('private', 'خاص')], default='private', help_text='مستوى الخصوصية', max_length=20)),
                ('is_primary', models.BooleanField(default=False, help_text='هل هو الموقع الرئيسي')),
                ('is_active', models.BooleanField(default=True, help_text='هل الموقع نشط')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('address', models.ForeignKey(help_text='العنوان', on_delete=django.db.models.deletion.CASCADE, related_name='user_locations', to='location_services.address')),
                ('user', models.ForeignKey(help_text='المستخدم', on_delete=django.db.models.deletion.CASCADE, related_name='locations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Location',
                'verbose_name_plural': 'User Locations',
                'ordering': ['-is_primary', '-created_at'],
                'unique_together': {('user', 'address')},
            },
        ),
        migrations.CreateModel(
            name='ServiceArea',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('max_distance_km', models.PositiveIntegerField(default=50, help_text='أقصى مسافة للخدمة بالكيلومتر')),
                ('travel_cost_per_km', models.DecimalField(decimal_places=2, default=0, help_text='تكلفة السفر لكل كيلومتر', max_digits=8)),
                ('minimum_service_fee', models.DecimalField(decimal_places=2, default=0, help_text='الحد الأدنى لرسوم الخدمة', max_digits=10)),
                ('is_active', models.BooleanField(default=True, help_text='هل منطقة الخدمة نشطة')),
                ('notes', models.TextField(blank=True, help_text='ملاحظات حول منطقة الخدمة')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('city', models.ForeignKey(help_text='المدينة', on_delete=django.db.models.deletion.CASCADE, related_name='service_areas', to='location_services.city')),
                ('professional', models.ForeignKey(help_text='المحترف', limit_choices_to={'user_type__in': ['home_pro', 'specialist', 'crew_member']}, on_delete=django.db.models.deletion.CASCADE, related_name='service_areas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Service Area',
                'verbose_name_plural': 'Service Areas',
                'ordering': ['city__name'],
                'unique_together': {('professional', 'city')},
            },
        ),
        migrations.CreateModel(
            name='LocationPermission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('permission_type', models.CharField(choices=[('view_location', 'عرض الموقع'), ('track_location', 'تتبع الموقع'), ('share_location', 'مشاركة الموقع')], help_text='نوع الصلاحية', max_length=20)),
                ('is_active', models.BooleanField(default=True, help_text='هل الصلاحية نشطة')),
                ('granted_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='تاريخ انتهاء الصلاحية', null=True)),
                ('granted_to', models.ForeignKey(help_text='المستخدم الممنوح له الصلاحية', on_delete=django.db.models.deletion.CASCADE, related_name='location_permissions_received', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(help_text='المستخدم مانح الصلاحية', on_delete=django.db.models.deletion.CASCADE, related_name='location_permissions_granted', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Location Permission',
                'verbose_name_plural': 'Location Permissions',
                'ordering': ['-granted_at'],
                'unique_together': {('user', 'granted_to', 'permission_type')},
            },
        ),
    ]
