# Generated by Django 4.2.7 on 2025-07-15 15:16

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, help_text='CSS class for icon', max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'db_table': 'project_categories',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField()),
                ('location', models.CharField(help_text='Project location/address', max_length=255)),
                ('budget_type', models.CharField(choices=[('fixed', 'Fixed Price'), ('hourly', 'Hourly Rate'), ('estimate', 'Estimate')], default='fixed', max_length=20)),
                ('budget_min', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('budget_max', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('budget_display', models.CharField(blank=True, help_text='Display budget (e.g., "$5,000 - $10,000")', max_length=100)),
                ('timeline', models.CharField(blank=True, help_text='Project timeline (e.g., "2-4 weeks")', max_length=255)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('required_skills', models.JSONField(blank=True, default=list, help_text='List of required skills')),
                ('required_roles', models.JSONField(blank=True, default=list, help_text='List of required user roles')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('paused', 'Paused')], default='draft', max_length=20)),
                ('urgency', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=20)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_remote_allowed', models.BooleanField(default=False)),
                ('requires_license', models.BooleanField(default=False)),
                ('requires_insurance', models.BooleanField(default=False)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('favorites_count', models.PositiveIntegerField(default=0)),
                ('proposals_count', models.PositiveIntegerField(default=0)),
                ('completion_percentage', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100)])),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_professional', models.ForeignKey(blank=True, limit_choices_to={'user_type__in': ['home_pro', 'specialist', 'crew_member']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_projects', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projects', to='projects.category')),
                ('client', models.ForeignKey(limit_choices_to={'user_type': 'client'}, on_delete=django.db.models.deletion.CASCADE, related_name='posted_projects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
                'db_table': 'projects',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProjectUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update_type', models.CharField(choices=[('status', 'Status Change'), ('progress', 'Progress Update'), ('milestone', 'Milestone'), ('general', 'General Update')], default='general', max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('previous_status', models.CharField(blank=True, max_length=20)),
                ('new_status', models.CharField(blank=True, max_length=20)),
                ('previous_completion', models.PositiveIntegerField(blank=True, null=True)),
                ('new_completion', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='updates', to='projects.project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_updates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Project Update',
                'verbose_name_plural': 'Project Updates',
                'db_table': 'project_updates',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProjectImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='projects/')),
                ('caption', models.CharField(blank=True, max_length=255)),
                ('is_primary', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='projects.project')),
            ],
            options={
                'verbose_name': 'Project Image',
                'verbose_name_plural': 'Project Images',
                'db_table': 'project_images',
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProjectFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='projects/files/')),
                ('filename', models.CharField(max_length=255)),
                ('file_type', models.CharField(choices=[('document', 'Document'), ('image', 'Image'), ('video', 'Video'), ('audio', 'Audio'), ('other', 'Other')], max_length=20)),
                ('file_size', models.PositiveIntegerField()),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='projects.project')),
            ],
            options={
                'verbose_name': 'Project File',
                'verbose_name_plural': 'Project Files',
                'db_table': 'project_files',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProjectView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_views', to='projects.project')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='viewed_projects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Project View',
                'verbose_name_plural': 'Project Views',
                'db_table': 'project_views',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['project', 'created_at'], name='project_vie_project_731803_idx'), models.Index(fields=['user', 'created_at'], name='project_vie_user_id_467043_idx')],
            },
        ),
        migrations.CreateModel(
            name='ProjectFavorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorited_by', to='projects.project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite_projects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Project Favorite',
                'verbose_name_plural': 'Project Favorites',
                'db_table': 'project_favorites',
                'ordering': ['-created_at'],
                'unique_together': {('user', 'project')},
            },
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['status'], name='projects_status_6303d7_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['category'], name='projects_categor_c363bc_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['location'], name='projects_locatio_349e19_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['client'], name='projects_client__90eb8f_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['assigned_professional'], name='projects_assigne_9feecc_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['published_at'], name='projects_publish_dff618_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['urgency'], name='projects_urgency_5d676e_idx'),
        ),
    ]
